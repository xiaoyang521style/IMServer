<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.appservice.base.mapper.GroupMessageMapper" >
  <resultMap id="BaseResultMap" type="cn.appservice.base.po.GroupMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="chatType" property="chattype" jdbcType="INTEGER" />
    <result column="sendtime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="sendId" property="sendid" jdbcType="INTEGER" />
    <result column="messageId" property="messageid" jdbcType="VARCHAR" />
    <result column="extend" property="extend" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.appservice.base.po.GroupMessage" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, group_id, chatType, sendtime, sendId, messageId, extend
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.appservice.base.po.GroupMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.appservice.base.po.GroupMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from group_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.appservice.base.po.GroupMessageExample" >
    delete from group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.appservice.base.po.GroupMessage" >
    insert into group_message (id, group_id, chatType, 
      sendtime, sendId, messageId, 
      extend, content)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=BIGINT}, #{chattype,jdbcType=INTEGER}, 
      #{sendtime,jdbcType=TIMESTAMP}, #{sendid,jdbcType=INTEGER}, #{messageid,jdbcType=VARCHAR}, 
      #{extend,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.appservice.base.po.GroupMessage" >
    insert into group_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="chattype != null" >
        chatType,
      </if>
      <if test="sendtime != null" >
        sendtime,
      </if>
      <if test="sendid != null" >
        sendId,
      </if>
      <if test="messageid != null" >
        messageId,
      </if>
      <if test="extend != null" >
        extend,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="chattype != null" >
        #{chattype,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendid != null" >
        #{sendid,jdbcType=INTEGER},
      </if>
      <if test="messageid != null" >
        #{messageid,jdbcType=VARCHAR},
      </if>
      <if test="extend != null" >
        #{extend,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.appservice.base.po.GroupMessageExample" resultType="java.lang.Integer" >
    select count(*) from group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update group_message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.chattype != null" >
        chatType = #{record.chattype,jdbcType=INTEGER},
      </if>
      <if test="record.sendtime != null" >
        sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendid != null" >
        sendId = #{record.sendid,jdbcType=INTEGER},
      </if>
      <if test="record.messageid != null" >
        messageId = #{record.messageid,jdbcType=VARCHAR},
      </if>
      <if test="record.extend != null" >
        extend = #{record.extend,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update group_message
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=BIGINT},
      chatType = #{record.chattype,jdbcType=INTEGER},
      sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      sendId = #{record.sendid,jdbcType=INTEGER},
      messageId = #{record.messageid,jdbcType=VARCHAR},
      extend = #{record.extend,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update group_message
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=BIGINT},
      chatType = #{record.chattype,jdbcType=INTEGER},
      sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      sendId = #{record.sendid,jdbcType=INTEGER},
      messageId = #{record.messageid,jdbcType=VARCHAR},
      extend = #{record.extend,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.appservice.base.po.GroupMessage" >
    update group_message
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="chattype != null" >
        chatType = #{chattype,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null" >
        sendtime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendid != null" >
        sendId = #{sendid,jdbcType=INTEGER},
      </if>
      <if test="messageid != null" >
        messageId = #{messageid,jdbcType=VARCHAR},
      </if>
      <if test="extend != null" >
        extend = #{extend,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.appservice.base.po.GroupMessage" >
    update group_message
    set group_id = #{groupId,jdbcType=BIGINT},
      chatType = #{chattype,jdbcType=INTEGER},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      sendId = #{sendid,jdbcType=INTEGER},
      messageId = #{messageid,jdbcType=VARCHAR},
      extend = #{extend,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.appservice.base.po.GroupMessage" >
    update group_message
    set group_id = #{groupId,jdbcType=BIGINT},
      chatType = #{chattype,jdbcType=INTEGER},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      sendId = #{sendid,jdbcType=INTEGER},
      messageId = #{messageid,jdbcType=VARCHAR},
      extend = #{extend,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>